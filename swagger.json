{
  "openapi": "3.0.3",
  "info": {
    "version": "2.0.2",
    "title": "API for service TaskPro âš¡",
    "description": "Showing off a base routes for application",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://aquatrack-api.onrender.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Endpoint about user information"
    },
    {
      "name": "Boards",
      "description": "Endpoint about board information"
    },
    {
      "name": "Columns",
      "description": "Endpoint about column information"
    },
    {
      "name": "Cards",
      "description": "Endpoint about card information"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Login error",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "The user is logged out",
            "content": {}
          },
          "401": {
            "description": "Missing token authorization",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get info about current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing token authorization ",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh user tokens",
        "security": [{ "refreshBearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing token authorization ",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update info about user",
        "security": [{ "Bearer": [true] }],
        "requestBody": {
          "description": "Object for update user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad information",
            "content": {}
          },
          "401": {
            "description": "Missing token authorization",
            "content": {}
          }
        }
      }
    },
    "/boards": {
      "post": {
        "tags": ["Boards"],
        "summary": "Create new board",
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Boards"],
        "summary": "Get all boards",
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/boards/:boardId": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get board per id",
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OneBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Boards"],
        "summary": "Edit one board per id",
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete one board per id",
        "parameters": [],
        "requestBody": {
          "description": "Boards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/columns": {
      "post": {
        "tags": ["Columns"],
        "summary": "Create new column",
        "parameters": [],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Columns"],
        "summary": "Get all Columns",
        "parameters": [],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/columns/:columnId": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get one column per id",
        "parameters": [],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OneColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Columns"],
        "summary": "Edit column per id",
        "parameters": [],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete one board per id",
        "parameters": [],
        "requestBody": {
          "description": "Columns object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards": {
      "post": {
        "tags": ["Cards"],
        "summary": "Create new card",
        "parameters": [],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Cards"],
        "summary": "Get all Cards",
        "parameters": [],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/cards/:cardId": {
      "get": {
        "tags": ["Cards"],
        "summary": "Get card per id",
        "parameters": [],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OneCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OneCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Cards"],
        "summary": "Edit card per id",
        "parameters": [],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Cards"],
        "summary": "Delete one card per id",
        "parameters": [],
        "requestBody": {
          "description": "Cards object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "user`s id"
          },
          "password": {
            "type": "string",
            "description": "user`s password"
          },
          "email": {
            "type": "string",
            "description": "user`s email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "user`s name"
          },
          "gender": {
            "type": "string",
            "description": "user`s name"
          },
          "weight": {
            "type": "number",
            "description": "user`s weight"
          },
          "time": {
            "type": "number",
            "description": "user`s time for sport"
          },
          "waterRate": {
            "type": "number",
            "description": "user`s waterRate"
          },
          "avatarURL": {
            "type": "string",
            "description": "user`s avatarURL"
          },
          "token": {
            "type": "string",
            "description": "user`s token"
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            },
            "message": {
              "type": "string",
              "description": "Message about result",
              "example": "User created"
            }
          }
        },
        "example": [
          {
            "user": {
              "email": "mango123@gmail.com"
            },
            "message": "User created"
          }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "Just a jwt token"
            },
            "user": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        },

        "example": [
          {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXNzYWdlIjoiV2h5IGFyZSB5b3UgdHJ5IHRvIGRlY29kZSBpdD8ifQ.8FnSdONYyG6MTCwm4my9XHdg8RQNEhjn-emR9DBs5Bw",
            "user": {
              "email": "mango123@gmail.com"
            }
          }
        ]
      },
      "CurrentResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "_id": {
                "type": "string",
                "description": "user`s id"
              },
              "password": {
                "type": "string",
                "description": "user`s password"
              },
              "email": {
                "type": "string",
                "description": "user`s email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "user`s name"
              },
              "gender": {
                "type": "string",
                "description": "user`s name"
              },
              "weight": {
                "type": "number",
                "description": "user`s weight"
              },
              "time": {
                "type": "number",
                "description": "user`s time for sport"
              },
              "waterRate": {
                "type": "number",
                "description": "user`s waterRate"
              },
              "avatarURL": {
                "type": "string",
                "description": "user`s avatarURL"
              },
              "token": {
                "type": "string",
                "description": "user`s token"
              }
            }
          }
        },

        "example": [
          {
            "_id": "664ce5b36a1a12bf746265c7",
            "password": "$2a$10$lWIBnmq8a3sV1sXXcjpmGOax1Drw4qxNt4ViiQiB244NoUYAPox.G",
            "email": "jasonwilhem12@gmail.com",
            "name": "Jason Wilhem",
            "gender": "male",
            "weight": 98,
            "time": 3,
            "waterRate": 1000,
            "avatarURL": "http://www.gravatar.com/avatar/cae73c2e854be6c0a89fcd6bbb5b28be",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NGNlNWIzNmExYTA4YmY3NDYyNjVjNyIsImlhdCI6MTcxNjMyMjEyMn0.J5T57VS3La7R271mBFr6gzV8TlrnKYDc1lbBWjh_KmA"
          }
        ]
      },
      "CountUsersResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "number",
            "description": "Message about count of registred users",
            "example": "213"
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user": {
              "_id": {
                "type": "string",
                "description": "user`s id"
              },
              "password": {
                "type": "string",
                "description": "user`s password"
              },
              "email": {
                "type": "string",
                "description": "user`s email",
                "format": "email"
              },
              "name": {
                "type": "string",
                "description": "user`s name"
              },
              "gender": {
                "type": "string",
                "description": "user`s name"
              },
              "weight": {
                "type": "number",
                "description": "user`s weight"
              },
              "time": {
                "type": "number",
                "description": "user`s time for sport"
              },
              "waterRate": {
                "type": "number",
                "description": "user`s waterRate"
              },
              "avatarURL": {
                "type": "string",
                "description": "user`s avatarURL"
              },
              "token": {
                "type": "string",
                "description": "user`s token"
              }
            }
          }
        },

        "example": [
          {
            "_id": "664ce5b36a1a12bf746265c7",
            "password": "$2a$10$lWIBnmq8a3sV1sXXcjpmGOax1Drw4qxNt4ViiQiB244NoUYAPox.G",
            "email": "jasonwilhem12@gmail.com",
            "name": "Jason Wilhem",
            "gender": "male",
            "weight": 98,
            "time": 3,
            "waterRate": 1000,
            "avatarURL": "http://www.gravatar.com/avatar/cae73c2e854be6c0a89fcd6bbb5b28be",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NGNlNWIzNmExYTA4YmY3NDYyNjVjNyIsImlhdCI6MTcxNjMyMjEyMn0.J5T57VS3La7R271mBFr6gzV8TlrnKYDc1lbBWjh_KmA"
          }
        ]
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "type": "string",
          "description": "Message about count of registred users",
          "example": {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTY1MjQyMTR9.HZUYz2LQvr0zDE46OpUQt7vG2dRGLvLW1aBvCfq8BJc",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTc3NzcwMTR9.qSgMOEjBrtK6XlXa9bwKM4v5xHP3CSmPQkqtx1nLfm4"
          }
        },

        "example": [
          {
            "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTY1MjQyMTR9.HZUYz2LQvr0zDE46OpUQt7vG2dRGLvLW1aBvCfq8BJc",
            "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6eyJpZCI6IjY2NGY1NTczZTM2MjFhZWRkODkwZDhlZSIsImlhdCI6MTcxNjQ3NTMwNSwiZXhwIjoxNzE3NzcxMzA1fSwiaWF0IjoxNzE2NDgxMDE0LCJleHAiOjE3MTc3NzcwMTR9.qSgMOEjBrtK6XlXa9bwKM4v5xHP3CSmPQkqtx1nLfm4"
          }
        ]
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "refreshBearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
